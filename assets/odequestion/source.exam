// Numbas version: exam_question_groups
{"name": "Homogeneous 2nd-order ODE (distinct roots)", "extensions": [], "custom_part_types": [], "resources": [], "navigation": {"showfrontpage": false, "allowregen": true, "preventleave": false}, "question_groups": [{"pickingStrategy": "all-ordered", "questions": [{"parts": [{"checkingAccuracy": 0.001, "vsetRange": [0, 1], "variableReplacements": [], "checkingType": "absdiff", "extendBaseMarkingAlgorithm": true, "marks": "3", "answer": "A*e^({root1}*x)+B*e^({root2}*x)", "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacementStrategy": "originalfirst", "showPreview": true, "scripts": {}, "vsetRangePoints": 5, "customMarkingAlgorithm": "cleanAnswer (Replaces e with exp):\n   simplify(replace(\"e^?;x\",\"exp(x)\",expression(studentAnswer)),[\"basic\",\"unitfactor\"])\n\nhasForm (Checks whether the result is in the right form):\n  length(match_regex(\"[a-zA-Z]+\\\\*exp\\\\(?.+\\\\)?\\\\s*\\\\+\\\\s*[a-zA-Z]+\\\\*exp\\\\(?.+\\\\)?\",string(cleanAnswer)))=1\n\ncr1 (Fixes problems with root being 1 or -1):\n  if (root1 = -1, \"-\", if (root1 = 1, \"\", root1))\n\ncr2 (Fixes problems with root being 1 or -1):\n  if (root2 = -1, \"-\", if (root1 = 2, \"\", root2))\n\ncontainsRoot1 (Check that the first root is contained):\n  not (length(match_regex(\"exp\\\\(\\\\(?\"+cr1+\"\\\\)?x\\\\)\",string(cleanAnswer)))=0)\n\ncontainsRoot2 (Check that the second root is contained):\n  not (length(match_regex(\"exp\\\\(\\\\(?\"+cr2+\"\\\\)?x\\\\)\",string(cleanAnswer)))=0)\n\nmark (Mark the thing):\n  apply(studentExpr);\n  apply(unexpectedVariables);\n  apply(sameVars);\n  //apply(numericallyCorrect);\n  apply(forbiddenStringsPenalty);\n  apply(requiredStringsPenalty);\n  set_credit(0,\"\");\n  if (containsRoot1 and containsRoot2, add_credit(2/3, \"Your roots are correct.\"), if (containsRoot1 or containsRoot2, add_credit(1/3, \"One of your roots is incorrect.\"), feedback(\"Your roots are incorrect.\")));\n  if (hasForm, add_credit(1/3,\"You have appropriate constants of integration.\"),feedback(\"You have forgotten one or more constants of integration.\"));\n  end()", "type": "jme", "unitTests": [{"notes": [{"expected": {"error": "", "warnings": [], "credit": 0, "value": "true", "valid": true, "messages": []}, "name": "hasform"}, {"expected": {"error": "", "warnings": [], "credit": 0, "value": "true", "valid": true, "messages": []}, "name": "containsroot1"}, {"expected": {"error": "", "warnings": [], "credit": 0, "value": "true", "valid": true, "messages": []}, "name": "containsroot2"}, {"expected": {"error": "", "warnings": [], "credit": 1, "value": "true", "valid": true, "messages": ["Your roots are correct.\n\nYou were awarded <strong>2</strong> marks.", "You have appropriate constants of integration.\n\nYou were awarded <strong>1</strong> mark."]}, "name": "mark"}, {"expected": {"error": "", "warnings": [], "credit": 0, "value": "[ true ]", "valid": true, "messages": []}, "name": "agree"}], "variables": [{"value": "-5", "name": "root1"}, {"value": "2", "name": "root2"}], "answer": {"value": "A exp({root1}*x)+B exp({root2}*x)", "valid": true}, "name": "Correct Solution"}, {"notes": [{"expected": {"error": "", "warnings": [], "credit": 0, "value": "true", "valid": true, "messages": []}, "name": "hasform"}, {"expected": {"error": "", "warnings": [], "credit": 0, "value": "true", "valid": true, "messages": []}, "name": "containsroot1"}, {"expected": {"error": "", "warnings": [], "credit": 0, "value": "true", "valid": true, "messages": []}, "name": "containsroot2"}, {"expected": {"error": "", "warnings": [], "credit": 1, "value": "true", "valid": true, "messages": ["Your roots are correct.\n\nYou were awarded <strong>2</strong> marks.", "You have appropriate constants of integration.\n\nYou were awarded <strong>1</strong> mark."]}, "name": "mark"}, {"expected": {"error": "", "warnings": [], "credit": 0, "value": "[ false ]", "valid": true, "messages": []}, "name": "agree"}], "variables": [{"value": "-5", "name": "root1"}, {"value": "2", "name": "root2"}], "answer": {"value": "A*exp({root2}*x)+B exp({root1}*x)", "valid": true}, "name": "Correct Solution (flipped)"}, {"notes": [{"expected": {"error": "", "warnings": [], "credit": 0, "value": "true", "valid": true, "messages": []}, "name": "hasform"}, {"expected": {"error": "", "warnings": [], "credit": 0, "value": "false", "valid": true, "messages": []}, "name": "containsroot1"}, {"expected": {"error": "", "warnings": [], "credit": 0, "value": "true", "valid": true, "messages": []}, "name": "containsroot2"}, {"expected": {"error": "", "warnings": [], "credit": 0.6666666666666666, "value": "true", "valid": true, "messages": ["One of your roots is incorrect.\n\nYou were awarded <strong>1</strong> mark.", "You have appropriate constants of integration.\n\nYou were awarded <strong>1</strong> mark."]}, "name": "mark"}, {"expected": {"error": "", "warnings": [], "credit": 0, "value": "[ false ]", "valid": true, "messages": []}, "name": "agree"}], "variables": [{"value": "-5", "name": "root1"}, {"value": "2", "name": "root2"}], "answer": {"value": "A*exp(random(-5..5 except[0,{root1}])*x)+B exp({root2}*x)", "valid": true}, "name": "Root 1 Wrong"}, {"notes": [{"expected": {"error": "", "warnings": [], "credit": 0, "value": "true", "valid": true, "messages": []}, "name": "hasform"}, {"expected": {"error": "", "warnings": [], "credit": 0, "value": "true", "valid": true, "messages": []}, "name": "containsroot1"}, {"expected": {"error": "", "warnings": [], "credit": 0, "value": "false", "valid": true, "messages": []}, "name": "containsroot2"}, {"expected": {"error": "", "warnings": [], "credit": 0.6666666666666666, "value": "true", "valid": true, "messages": ["One of your roots is incorrect.\n\nYou were awarded <strong>1</strong> mark.", "You have appropriate constants of integration.\n\nYou were awarded <strong>1</strong> mark."]}, "name": "mark"}, {"expected": {"error": "", "warnings": [], "credit": 0, "value": "[ false ]", "valid": true, "messages": []}, "name": "agree"}], "variables": [{"value": "-5", "name": "root1"}, {"value": "2", "name": "root2"}], "answer": {"value": "A*exp({root1}*x)+B exp(random(-5..5 except[0,{root2}])*x)", "valid": true}, "name": "Root 2 Wrong"}, {"notes": [{"expected": {"error": "", "warnings": [], "credit": 0, "value": "true", "valid": true, "messages": []}, "name": "hasform"}, {"expected": {"error": "", "warnings": [], "credit": 0, "value": "false", "valid": true, "messages": []}, "name": "containsroot1"}, {"expected": {"error": "", "warnings": [], "credit": 0, "value": "false", "valid": true, "messages": []}, "name": "containsroot2"}, {"expected": {"error": "", "warnings": [], "credit": 0.3333333333333333, "value": "true", "valid": true, "messages": ["Your roots are incorrect.", "You have appropriate constants of integration.\n\nYou were awarded <strong>1</strong> mark."]}, "name": "mark"}, {"expected": {"error": "", "warnings": [], "credit": 0, "value": "[ false ]", "valid": true, "messages": []}, "name": "agree"}], "variables": [{"value": "-5", "name": "root1"}, {"value": "2", "name": "root2"}], "answer": {"value": "A*exp(random(-5..5 except[0,{root2},{root1}])*x)+B*exp(random(-5..5 except[0,{root2},{root1}])*x)", "valid": true}, "name": "Both Roots Wrong"}, {"notes": [{"expected": {"error": "", "warnings": [], "credit": 0, "value": "a*exp(1x) + b*exp((-2)x)", "valid": true, "messages": []}, "name": "cleananswer"}, {"expected": {"error": "", "warnings": [], "credit": 0, "value": "true", "valid": true, "messages": []}, "name": "hasform"}, {"expected": {"error": "", "warnings": [], "credit": 0, "value": "\"\"", "valid": true, "messages": []}, "name": "cr1"}, {"expected": {"error": "", "warnings": [], "credit": 0, "value": "-2", "valid": true, "messages": []}, "name": "cr2"}, {"expected": {"error": "", "warnings": [], "credit": 0, "value": "false", "valid": true, "messages": []}, "name": "containsroot1"}, {"expected": {"error": "", "warnings": [], "credit": 0, "value": "true", "valid": true, "messages": []}, "name": "containsroot2"}, {"expected": {"error": "", "warnings": [], "credit": 0.6666666666666666, "value": "true", "valid": true, "messages": ["One of your roots is incorrect.\n\nYou were awarded <strong>1</strong> mark.", "You have appropriate constants of integration.\n\nYou were awarded <strong>1</strong> mark."]}, "name": "mark"}, {"expected": {"error": "", "warnings": [], "credit": 0, "value": "a*e^(1x) + b*e^((-2)x)", "valid": true, "messages": []}, "name": "studentexpr"}, {"expected": {"error": "", "warnings": [], "credit": 0, "value": "\"a*e^(1x) + b*e^((-2)x)\"", "valid": true, "messages": []}, "name": "cleanedstudentstring"}, {"expected": {"error": "", "warnings": [], "credit": 0, "value": "a*e^(1x) + b*e^((-2)x)", "valid": true, "messages": []}, "name": "interpreted_answer"}], "variables": [{"value": "1", "name": "root1"}, {"value": "-2", "name": "root2"}], "answer": {"value": "a*e^(1x)+b*e^(-2x)", "valid": true}, "name": "Testing for unit values of root"}], "expectedVariableNames": [], "checkVariableNames": false, "failureRate": 1}], "contributors": [{"profile_url": "https://numbas.mathcentre.ac.uk/accounts/profile/724/", "name": "Andrew Iskauskas"}, {"profile_url": "https://numbas.mathcentre.ac.uk/accounts/profile/2426/", "name": "Sam Fearn"}], "preamble": {"css": "", "js": ""}, "advice": "<p>This is a constant coefficient, second-order ODE. We can use the auxilliary equation to find solutions.</p>\n<p>Suppose the differential equation is</p>\n<p>$y''+4y'-12y=0.$</p>\n<p>Then trying a solution of the form $y=e^{\\lambda x}$ gives</p>\n<p>$(\\lambda^{2}+4\\lambda-12)e^{\\lambda x}=0,$</p>\n<p>from which we can solve the auxilliary equation in $\\lambda$. Here, it factorises as $(\\lambda-2)(\\lambda+6)$, so we have roots $\\lambda=-6,\\,2$. Then the general solution is</p>\n<p>$y=A e^{-6 x}+B e^{2x},$</p>\n<p>where $A$ and $B$ are arbitrary constants.</p>", "extensions": [], "variablesTest": {"maxRuns": 100, "condition": ""}, "metadata": {"description": "<p>Straightforward question: student must find the general solution to a second order constant coefficient ODE. Uses custom marking algorithm to check that both roots appear and that the solution is in the correct form (e.g. two arbitrary constants are present). Arbitrary constants can be any non space-separated string of characters. The algorithm also allows for the use of $e^x$ rather than $\\exp(x)$.</p>\n<p>Unit tests are also included, to check whether the algorithm accurately marks when the solution is correct; when it's correct but deviates from the 'answer'; when one or more roots is incorrect; or when the roots are correct but constants of integration have been forgotten.</p>", "licence": "Creative Commons Attribution-NonCommercial-NoDerivs 4.0 International"}, "statement": "<p>Find the general solution, $y(x)$, for the following ODE:</p>\n<p>$\\simplify{y''-{root1+root2}*y'+{root1*root2}*y}=0.$</p>", "functions": {}, "ungrouped_variables": ["root1", "root2"], "tags": [], "name": "Homogeneous 2nd-order ODE (distinct roots)", "variables": {"root2": {"definition": "random(-5..5 except [0,root1])", "description": "<p>The second root of the auxilliary equation.</p>", "name": "root2", "group": "Ungrouped variables", "templateType": "anything"}, "root1": {"definition": "random(-5..5 except 0)", "description": "<p>The first root of the auxilliary equation.</p>", "name": "root1", "group": "Ungrouped variables", "templateType": "anything"}}, "variable_groups": [], "rulesets": {}}]}], "contributors": [{"profile_url": "https://numbas.mathcentre.ac.uk/accounts/profile/724/", "name": "Andrew Iskauskas"}, {"profile_url": "https://numbas.mathcentre.ac.uk/accounts/profile/2426/", "name": "Sam Fearn"}]}